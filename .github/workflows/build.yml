name: Build

on:
  workflow_run:
    workflows: [Test]
    types: [completed]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vichannnnn/holy-grail

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CICD_TOKEN }}

      - name: Define tag suffix and Dockerfile
        run: |
            if [[ "${{ github.ref }}" == 'refs/heads/master' ]]; then
              echo "TAG_SUFFIX=" >> $GITHUB_ENV
              echo "DOCKERFILE=Dockerfile.prod" >> $GITHUB_ENV
            else
              echo "TAG_SUFFIX=-dev" >> $GITHUB_ENV
              echo "DOCKERFILE=Dockerfile.dev" >> $GITHUB_ENV
            fi

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./holy-grail-backend/backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/holy-grail-backend${{ env.TAG_SUFFIX }}:latest

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./holy-grail-frontend
          file: ./holy-grail-frontend/${{ env.DOCKERFILE }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/holy-grail-frontend${{ env.TAG_SUFFIX }}:latest

      - name: Build and push Scheduler Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./holy-grail-backend/backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/holy-grail-scheduler${{ env.TAG_SUFFIX }}:latest


  check:
    if: always()
    needs: [ Build ]
    runs-on: ubuntu-latest
    steps:
      - name: All jobs result
        uses: re-actors/alls-green@release/v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}

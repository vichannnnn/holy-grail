services:
  db:
    container_name: db
    networks:
      - holy-grail-network
    env_file:
      - ../../apps/backend/.env
    healthcheck:
      interval: 5s
      retries: 10
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
    image: postgres:14.1-alpine
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - ../../docker-volumes/db:/var/lib/postgresql/data
      - ../../docker-volumes/db-init:/docker-entrypoint-initdb.d/

  redis:
    container_name: redis
    image: redis:7.0.7-alpine
    networks:
      - holy-grail-network
    ports:
      - "6379:6379"
    depends_on:
      - db
    command: redis-server --loglevel verbose
    restart: unless-stopped

#  celery:
#    container_name: celery
#    networks:
#      - holy-grail-network
#    env_file:
#      - ../../apps/backend/.env
#    depends_on:
#      - redis
#    build:
#      context: ../../apps/backend
#    command: celery -A app.utils.worker worker -B --loglevel=info
#    restart: unless-stopped
#    healthcheck:
#      test: [ "CMD-SHELL", "celery inspect ping" ]
#    volumes:
#      - ../../docker-volumes/backend:/app

networks:
  holy-grail-network:
    name: holy-grail-network
    driver: bridge